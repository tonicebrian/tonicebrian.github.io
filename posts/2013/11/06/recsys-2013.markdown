---
comments: true
date: 2013-11-06 10:00:46
layout: post
slug: recsys-2013
title: RecSys 2013
wordpressid: 551
categories: Data Mining
tags: algorithm,conference,machine learning,recsys
---

![](AcmRecsys-300x42.png)

It has been 3 years since I attended my last RecSys and last week I went again to [that conference](http://recsys.acm.org/recsys13/) in Hong Kong. I came back home with lots of useful insights although to get those gems I had to go through lots of boring to death presentations. Hey guys, presenting to an audience doesn't mean cut and pasting from your latex article directly into your beamer presentation. You have to think about how to communicate to an audience. And don't tell me it's about algorithms and complex mathematics, so it was [Harald Steck's](http://dl.acm.org/citation.cfm?id=2507160) from Netflix and it was very pedagogical. Next year make sure you think in your audience before reporting your research.


This is my personal and biased review of the conference. It's mainly what I found interesting and what it could be easily deployed at my current employer, [Softonic](http://www.softonic.com).

On Saturday we had an excellent tutorial about [Learning To Rank for Recommender Systems](http://www.slideshare.net/kerveros99/learning-to-rank-for-recommender-system-tutorial-acm-recsys-2013) by [Alex](https://twitter.com/alexk_z), [Linas ](https://twitter.com/LinasTw)and [Shi](https://twitter.com/yueshi_nl). Here I'm completely biased because I've worked with them and I know how good they are, but this tutorial was really interesting and full of stuff. I recommend it for a very good introduction to this complex topic.

![](calle-hong-kong-small-258x300.png)

For me the most interesting session of the conference was the workshop on [Large Scale Recommenders](http://graphlab.org/lsrs2013/program/#LSRS2013). There was an [interesting presentation](http://graphlab.org/wp-content/uploads/2013/10/paper_13.pdf) about how to use Multi-armed bandits for recommending videos in a popular Dutch multimedia site. This talk was full of practical information about the technological stack for deploying bandits at scale. Some guys from eBay where presenting how do [they recommend items](http://graphlab.org/wp-content/uploads/2013/10/paper_14.pdf) in a domain where users are open to sell whatever they want and describe it free form. They were creating fine grained clusters based mainly on the search queries. The idea was to create semantically consistent cluster of items. They identified different use cases pre-purchase and post-purchase and it seemed that this cluster solution was working very well. For us in the app domain, this also makes sense, when browsing you are interested in similar applications but after a download you are interested in complementary apps not apps in the same niche. [Aapo Kyrölä](https://twitter.com/kyrpov) gave two excellent talks about [GraphChi ](http://www.slideshare.net/akyrola/largescale-recommendation-systems-on-just-a-pc)and about [Personalized PageRank ](www.slideshare.net/akyrola/drunkardmob-billions-of-random-walks-on-just-a-pc)for Big Data. Read them. Funny comparisons about how much it took for his laptop against giant Hadoop clusters. Main take aways, "Before doing anything, think twice" and "Don't follow the hype, even GraphChi's hype".

Although I was in different sessions there were other presentations during the weekend that generated Twitter action, like the [keynote ](http://www.slideshare.net/d0nut/open-recommendation-platform)in the [News Recommender Systems workshop](https://sites.google.com/site/newsrec2013/) and the tutorial on [people recommendations](http://www.slideshare.net/anmolbhasin/tutorial-on-people-recommendations-in-social-networks-acm-recsys-2013hong-kong) from Linkedin.

From the Monday sessions I liked two papers trying to introduce diversity in the recommendations. The first [Trading-off Among Accuracy, Similarity, Diversity, and Long-tail: A Graph-based Recommendation Approach](http://dl.acm.org/citation.cfm?id=2507165) from [Baidu](http://www.baidu.com/) where you can model your costs for multi targeted objectives and a random walk in the graph provides the recommendations. The second paper was [Nonlinear Latent Factorization by Embedding Multiple User Interests](http://research.google.com/pubs/pub41535.html) from Google. Here the user is described as a set of latent vectors each one describing one of the user's interests.

On Tuesday, the Microsoft's paper, [Xbox Movies Recommendations: Variational Bayes Matrix Factorization with Embedded Feature Selection](http://dl.acm.org/citation.cfm?id=2507168) from [Noam Koenigstein](http://www.eng.tau.ac.il/~noamk/) was very interesting and I think we could use a similar approach for recommending software at [Softonic](http://www.softonic.com/). Here a probabilistic graphical model was proposed for an scenario of binary implicit feedback enriched with metadata in the form of tags. From this same author I discovered in the Large Scale Recommenders workshop the work [he has been doing](http://www.eng.tau.ac.il/~noamk/papers/fp093-koenigstein.pdf) on using Matrix Factorization results in real time. This paper was the perfect companion to the poster he presented about [Item-Oriented recommendations](http://www.eng.tau.ac.il/~noamk/papers/item_based_recsys_2013.pdf). In the afternoon there was the paper [Rating Support Interfaces to Improve User Experience and Recommender Accuracy](http://dl.acm.org/citation.cfm?doid=2507157.2507188) that focused on improving UI for recommenders for helping in eliciting true preferences. Very interesting.  Also of interest were [Pairwise learning in recommendations of communities](http://www.slideshare.net/AmitSharma315/pairwise-learning-experiments-with-community-recommendation-on-linkedin) from Linkedin and [Which App Will You Use Next](http://www.cs.utexas.edu/~inderjit/public_papers/app_recommendation_recsys13.pdf) that proposed a recommender system that predicts which app has higher probability of being used next based on your past behavior. It would be very interesting to pilot a widget for [Moba](http://softonic-moba.softonic.com/).

The last day of the conference, had the Industry Session with lots of gems, like Huawei App Store using Deep Neural Networks for recommendations so they don't spend time doing feature engineering. [Alibaba](http://www.alibaba.com/) told that Diversity and Complementary are worse for CTR but better for conversion, so watch your KPIs. [Tencent ](http://www.tencent.com/index_e.shtml)showed all the metadata for users and items they use and the distributed hybrid algorithm they use to deliver recommendations. For us in the western world, used to the Facebooks and Googles, seeing the technology the Chinese companies are using/developing was a big surprise.

![](neon_hong_kong-small-225x300.png)

The best paper award was [A Fast Parallel SGD for Matrix Factorization in Shared Memory Systems](http://www.csie.ntu.edu.tw/~cjlin/papers/libmf.pdf), hardcore algorithmic approach but far from my day to day routine. I've mentioned before the  paper about [Rating-prediction and Ranking](http://dl.acm.org/citation.cfm?id=2507160) from Netflix that addresses the selection bias (you are more likely to rate highly/low valued items but nothing in between) as a related sub-problem. By modeling the decision to rate you gain insight on all the unknown ratings.

The last session about Scalability was the most interesting with all the papers in my ToRead list. [Using maximum coverage to optimize recommendation systems](http://dl.acm.org/citation.cfm?id=2507169) used well known algorithms of combinatorial optimization in order to select the set of items with maximum probability of conversion. In [Efficient top-n recommendation for very large scale binary rated datasets](http://dl.acm.org/citation.cfm?id=2507189) they presented a large scale matrix factorization algorithm for implicit datasets. This guys presented the extension to the algorithm that won the [Million Song contest in Kaggle](http://www.kaggle.com/c/msdchallenge) so this paper must be read carefully. In [Distributed Matrix Factorization with MapReduce using a series of Broadcast-Joins](http://ssc.io/wp-content/uploads/2011/12/sys024-schelter.pdf) it was exposed a distributed Alternating Least Squares (ALS) approach to Matrix Factorization that is going to be included in [Mahout](http://mahout.apache.org/). They also taught me about a toolkit for generating synthetic data, [Myriad](https://github.com/TU-Berlin-DIMA/myriad-toolkit/wiki),  something I have to research more carefully.

And that was it!! I had a very good time and glad to meet lot of people I admire in person. Hopefully see you next year!!
